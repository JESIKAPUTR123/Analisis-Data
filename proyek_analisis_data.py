# -*- coding: utf-8 -*-
"""Proyek Analisis Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ug4Ox4qIFDSo1koFA0XiNJE-ce12rECy

# Proyek Analisis Data: [Input Nama Dataset]
- **Nama:** [Jesika Putri]
- **Email:** [jesikaputri121@gmail.com]
- **ID Dicoding:** [jesika_jne]

## Menentukan Pertanyaan Bisnis

- Bagaimana pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa?
- Faktor-faktor apa yang memengaruhi permintaan penyewaan sepeda?

## Import Semua Packages/Library yang Digunakan
"""

# prompt: tambahkan dan import streamlit supaya juga bisa membuat dashboard

# # Proyek Analisis Data: [Input Nama Dataset]
# - **Nama:** [Jesika Putri]
# - **Email:** [jesikaputri121@gmail.com]
# - **ID Dicoding:** [jesika_jne]
# ## Menentukan Pertanyaan Bisnis
# - Bagaimana pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa?
# - Faktor-faktor apa yang memengaruhi permintaan penyewaan sepeda?
# ## Import Semua Packages/Library yang Digunakan

!pip install streamlit
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

!wget https://archive.ics.uci.edu/ml/machine-learning-databases/00275/Bike-Sharing-Dataset.zip
!unzip Bike-Sharing-Dataset.zip

"""## Data Wrangling

### Gathering Data
"""

# prompt: lanjutkan ke gathering data

import pandas as pd
day_df = pd.read_csv('day.csv')
hour_df = pd.read_csv('hour.csv')

"""**Insight:**
- day_df
- hour_df

### Assessing Data
"""

# prompt: lanjutkan kodingan ke proses assessing data

# Melihat 5 baris pertama data day_df
print("Lima baris pertama data day_df:")
print(day_df.head())

# Melihat info data day_df
print("\nInformasi data day_df:")
print(day_df.info())

# Melihat statistik deskriptif data day_df
print("\nStatistik deskriptif data day_df:")
print(day_df.describe())

# Melihat jumlah nilai null pada data day_df
print("\nJumlah nilai null pada data day_df:")
print(day_df.isnull().sum())

# Melihat 5 baris pertama data hour_df
print("\nLima baris pertama data hour_df:")
print(hour_df.head())

# Melihat info data hour_df
print("\nInformasi data hour_df:")
print(hour_df.info())

# Melihat statistik deskriptif data hour_df
print("\nStatistik deskriptif data hour_df:")
print(hour_df.describe())

# Melihat jumlah nilai null pada data hour_df
print("\nJumlah nilai null pada data hour_df:")
print(hour_df.isnull().sum())

# Mencari duplikasi data pada day_df
print("\nJumlah duplikasi data pada day_df:")
print(day_df.duplicated().sum())

# Mencari duplikasi data pada hour_df
print("\nJumlah duplikasi data pada hour_df:")
print(hour_df.duplicated().sum())

"""**Insight:**
- Struktur Data: Melalui head() dan info(), kita dapat memahami bagaimana data disusun dan tipe data yang digunakan.
- Kualitas Data: Dengan isnull().sum(), kita dapat melihat apakah ada data yang hilang. Sedangkan, duplicated().sum() membantu kita menemukan baris data yang terduplikasi.
- Deskripsi Data: Melalui describe(), kita mendapatkan pandangan umum mengenai distribusi data dan apakah terdapat potensi outlier.

### Cleaning Data
"""

# prompt: selanjutnya lakukan cleaning data

import pandas as pd
import matplotlib.pyplot as plt
# Karena tidak ada data yang hilang dan duplikat, maka kita tidak perlu melakukan cleaning data.
# Namun, kita dapat melakukan konversi tipe data jika diperlukan.
# Misalnya, jika kolom 'dteday' dianggap sebagai datetime, kita dapat mengubahnya.

# day_df['dteday'] = pd.to_datetime(day_df['dteday'])
# hour_df['dteday'] = pd.to_datetime(hour_df['dteday'])

# Kita juga dapat melakukan pengecekan terhadap outlier.
# Namun, untuk kasus ini, outlier mungkin menunjukkan tren yang valid, seperti hari dengan jumlah penyewaan sepeda yang sangat tinggi.
# Oleh karena itu, kita perlu berhati-hati dalam menangani outlier.

# Misalnya, kita dapat memeriksa distribusi data 'cnt' (jumlah penyewaan sepeda) pada day_df.
# plt.figure(figsize=(10, 6))
# sns.boxplot(x=day_df['cnt'])
# plt.title('Distribusi Jumlah Penyewaan Sepeda (day_df)')
# plt.show()

# Jika terdapat outlier yang signifikan, kita dapat mempertimbangkan untuk menggantinya dengan nilai median atau mean.
# Namun, perlu diingat bahwa hal ini dapat memengaruhi analisis selanjutnya.

# Selain itu, kita dapat melakukan pengecekan terhadap konsistensi data.
# Misalnya, memastikan bahwa 'instant' pada day_df dan hour_df sesuai.
# Namun, untuk kasus ini, 'instant' mungkin hanya berupa indeks dan tidak perlu diperiksa konsistensinya.

# **Insight:**
# - Data sudah bersih dan siap untuk dianalisis.
# - Kita perlu berhati-hati dalam menangani outlier, karena outlier mungkin menunjukkan tren yang valid.
# - Kita dapat melakukan konversi tipe data jika diperlukan.

"""**Insight:**
- Data Sudah Bersih dan Siap Dianalisis: Tidak ada data yang hilang atau duplikat, sehingga tidak diperlukan langkah pembersihan data lebih lanjut. Konversi tipe data seperti kolom tanggal dapat dilakukan jika diperlukan untuk keperluan analisis lebih lanjut.

- Penanganan Outlier dengan Cermat: Outlier dalam data, seperti hari dengan jumlah penyewaan sepeda yang sangat tinggi, mungkin menunjukkan tren yang valid. Oleh karena itu, perlu berhati-hati dalam menangani outlier agar tidak menghilangkan informasi penting yang relevan dengan analisis.
"""

# prompt: tahapan selanjutnya untuk proses cleaning

# Periksa konsistensi data antara day_df dan hour_df (jika diperlukan)
# Misalnya, jika terdapat kolom 'instant' yang seharusnya sama pada kedua dataframe,
# kita dapat memeriksa apakah nilainya sama.
# Jika tidak sama, kita perlu menyelidiki penyebabnya dan melakukan koreksi.


# Periksa nilai yang tidak wajar pada variabel numerik.
# Misalnya, jika terdapat nilai negatif pada variabel 'temp', 'hum', 'windspeed',
# atau 'cnt', kita perlu menyelidiki penyebabnya dan melakukan koreksi.


# Periksa nilai yang tidak wajar pada variabel kategorikal.
# Misalnya, jika terdapat nilai yang tidak valid pada kolom 'season', 'yr', 'mnth',
# 'holiday', 'weekday', 'workingday', 'weathersit', kita perlu menyelidiki
# penyebabnya dan melakukan koreksi.


# Periksa apakah terdapat kesalahan input data.
# Misalnya, jika terdapat nilai yang tidak konsisten pada kolom 'casual' dan 'registered'
# dengan total 'cnt', kita perlu menyelidiki penyebabnya dan melakukan koreksi.


# Jika terdapat kesalahan data, kita dapat melakukan koreksi atau menghapus data tersebut.
# Misalnya, jika terdapat nilai negatif pada variabel 'temp', kita dapat menggantinya
# dengan nilai rata-rata atau median.
# Atau, jika terdapat kesalahan input data pada kolom 'casual' dan 'registered',
# kita dapat menggantinya dengan nilai yang benar.


# Lakukan pengecekan kembali untuk memastikan bahwa data sudah bersih dan siap
# untuk dianalisis.

"""## Exploratory Data Analysis (EDA)

### Explore ...
"""

# prompt: lakukan explore

import matplotlib.pyplot as plt
# Melihat korelasi antar variabel pada day_df
correlation_matrix = day_df.corr()
plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Korelasi antar variabel pada day_df')
plt.show()

# Melihat distribusi jumlah penyewaan sepeda (cnt) pada day_df
plt.figure(figsize=(10, 6))
sns.histplot(day_df['cnt'], kde=True)
plt.title('Distribusi Jumlah Penyewaan Sepeda (day_df)')
plt.xlabel('Jumlah Penyewaan Sepeda')
plt.ylabel('Frekuensi')
plt.show()

# Melihat hubungan antara suhu (temp) dan jumlah penyewaan sepeda (cnt) pada day_df
plt.figure(figsize=(10, 6))
sns.scatterplot(x='temp', y='cnt', data=day_df)
plt.title('Hubungan antara Suhu dan Jumlah Penyewaan Sepeda (day_df)')
plt.xlabel('Suhu')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Melihat hubungan antara musim (season) dan jumlah penyewaan sepeda (cnt) pada day_df
plt.figure(figsize=(10, 6))
sns.boxplot(x='season', y='cnt', data=day_df)
plt.title('Hubungan antara Musim dan Jumlah Penyewaan Sepeda (day_df)')
plt.xlabel('Musim')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Melihat hubungan antara hari kerja (workingday) dan jumlah penyewaan sepeda (cnt) pada day_df
plt.figure(figsize=(10, 6))
sns.boxplot(x='workingday', y='cnt', data=day_df)
plt.title('Hubungan antara Hari Kerja dan Jumlah Penyewaan Sepeda (day_df)')
plt.xlabel('Hari Kerja')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Melihat pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa pada day_df
plt.figure(figsize=(10, 6))
sns.scatterplot(x='casual', y='registered', data=day_df)
plt.title('Pola Penggunaan Sepeda antara Pengguna Terdaftar dan Pengguna Biasa (day_df)')
plt.xlabel('Pengguna Biasa')
plt.ylabel('Pengguna Terdaftar')
plt.show()

# Melihat pola penggunaan sepeda berdasarkan jam pada hour_df
plt.figure(figsize=(10, 6))
sns.lineplot(x='hr', y='cnt', data=hour_df)
plt.title('Pola Penggunaan Sepeda Berdasarkan Jam (hour_df)')
plt.xlabel('Jam')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Melihat hubungan antara cuaca (weathersit) dan jumlah penyewaan sepeda (cnt) pada hour_df
plt.figure(figsize=(10, 6))
sns.boxplot(x='weathersit', y='cnt', data=hour_df)
plt.title('Hubungan antara Cuaca dan Jumlah Penyewaan Sepeda (hour_df)')
plt.xlabel('Cuaca')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

"""**Insight:**
- Korelasi variabel: Suhu, musim, dan hari kerja mempengaruhi jumlah penyewaan sepeda.

- Pola penggunaan: Ada tren penggunaan sepeda berdasarkan jam dan cuaca.

## Visualization & Explanatory Analysis

### Pertanyaan 1:Bagaimana pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa?
"""

# prompt: selanjutnya tentukan pola sepeda anata pengguna terdaftar dan pengguna biasa

import matplotlib.pyplot as plt
# Analisis pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa
plt.figure(figsize=(10, 6))
sns.scatterplot(x='casual', y='registered', data=day_df)
plt.title('Pola Penggunaan Sepeda antara Pengguna Terdaftar dan Pengguna Biasa')
plt.xlabel('Pengguna Biasa')
plt.ylabel('Pengguna Terdaftar')
plt.show()

# Melihat distribusi pengguna biasa dan pengguna terdaftar
plt.figure(figsize=(10, 6))
sns.histplot(day_df['casual'], kde=True, label='Pengguna Biasa')
sns.histplot(day_df['registered'], kde=True, label='Pengguna Terdaftar')
plt.title('Distribusi Pengguna Biasa dan Pengguna Terdaftar')
plt.xlabel('Jumlah Pengguna')
plt.ylabel('Frekuensi')
plt.legend()
plt.show()

# Melihat korelasi antara pengguna biasa dan pengguna terdaftar
print(day_df[['casual', 'registered']].corr())

# Insight:
# - Pola penggunaan sepeda antara pengguna terdaftar dan pengguna biasa dapat dilihat melalui scatter plot dan distribusi.
# - Korelasi antara pengguna biasa dan pengguna terdaftar dapat memberikan informasi tentang hubungan antara kedua jenis pengguna.

"""### Pertanyaan 2: Faktor-faktor apa yang memengaruhi permintaan penyewaan sepeda?"""

# prompt: selanjutnya tentukan faktor-faktor yang mempengaruhi permintaan penyewaan sepeda

import matplotlib.pyplot as plt
# Analisis pengaruh suhu terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.scatterplot(x='temp', y='cnt', data=day_df)
plt.title('Pengaruh Suhu terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Suhu')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Analisis pengaruh musim terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.boxplot(x='season', y='cnt', data=day_df)
plt.title('Pengaruh Musim terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Musim')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Analisis pengaruh hari kerja terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.boxplot(x='workingday', y='cnt', data=day_df)
plt.title('Pengaruh Hari Kerja terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Hari Kerja')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Analisis pengaruh cuaca terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.boxplot(x='weathersit', y='cnt', data=hour_df)
plt.title('Pengaruh Cuaca terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Cuaca')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Analisis pengaruh hari libur terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.boxplot(x='holiday', y='cnt', data=day_df)
plt.title('Pengaruh Hari Libur terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Hari Libur')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Analisis pengaruh jam terhadap permintaan penyewaan sepeda
plt.figure(figsize=(10, 6))
sns.lineplot(x='hr', y='cnt', data=hour_df)
plt.title('Pengaruh Jam terhadap Permintaan Penyewaan Sepeda')
plt.xlabel('Jam')
plt.ylabel('Jumlah Penyewaan Sepeda')
plt.show()

# Insight:
# - Suhu, musim, hari kerja, cuaca, hari libur, dan jam dapat memengaruhi permintaan penyewaan sepeda.
# - Kita dapat melakukan analisis lebih lanjut untuk melihat hubungan yang lebih spesifik antara faktor-faktor tersebut dengan permintaan penyewaan sepeda.

"""**Insight:**
- Faktor-faktor utama: Suhu, musim, hari kerja, cuaca, dan hari libur mempengaruhi permintaan penyewaan sepeda.

- Pola waktu: Permintaan sepeda juga dipengaruhi oleh jam dalam sehari.

## Analisis Lanjutan (Opsional)
"""



"""## Conclusion

- Conclution pertanyaan 1
- Conclution pertanyaan 2
"""